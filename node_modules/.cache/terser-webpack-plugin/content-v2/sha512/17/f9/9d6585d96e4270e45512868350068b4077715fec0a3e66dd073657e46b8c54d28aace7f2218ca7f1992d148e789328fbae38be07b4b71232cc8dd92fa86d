{"map":"{\"version\":3,\"sources\":[\"/Users/sam/Sites/food-recipes/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-4-0!/Users/sam/Sites/food-recipes/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-4-1!/Users/sam/Sites/food-recipes/node_modules/postcss-loader/src/index.js??postcss!/Users/sam/Sites/food-recipes/src/recipe.module.css\",\"/Users/sam/Sites/food-recipes/src/Recipe.js\",\"/Users/sam/Sites/food-recipes/src/App.js\",\"/Users/sam/Sites/food-recipes/src/serviceWorker.js\",\"/Users/sam/Sites/food-recipes/src/index.js\"],\"names\":[\"module\",\"exports\",\"recipe\",\"image\",\"Recipe\",\"_ref\",\"title\",\"calories\",\"ingredients\",\"react_default\",\"a\",\"createElement\",\"className\",\"style\",\"src\",\"alt\",\"map\",\"ingredient\",\"text\",\"Math\",\"round\",\"App\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"recipes\",\"setRecipes\",\"_useState3\",\"_useState4\",\"search\",\"setSearch\",\"_useState5\",\"_useState6\",\"query\",\"setQuery\",\"useEffect\",\"getRecipes\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"response\",\"data\",\"wrap\",\"_context\",\"prev\",\"next\",\"fetch\",\"concat\",\"sent\",\"json\",\"hits\",\"stop\",\"apply\",\"this\",\"arguments\",\"onSubmit\",\"e\",\"preventDefault\",\"type\",\"placeholder\",\"value\",\"onChange\",\"target\",\"console\",\"log\",\"src_Recipe\",\"label\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"recipe\\\":\\\"recipe_recipe__BdaUe\\\",\\\"image\\\":\\\"recipe_image__BtdIE\\\"};\",\"import React from 'react';\\nimport style from './recipe.module.css';\\n\\n\\nconst Recipe = ({image, title, calories, ingredients}) => {\\n    return(\\n        <div className={style.recipe}>\\n            <img className={style.image} src={image} alt=\\\"\\\" />\\n            <h1>{title}</h1>\\n            <ol>\\n                {ingredients.map(ingredient => (\\n                    <li>{ingredient.text}</li>\\n                ))}\\n            </ol>\\n            <p><span>Calories:</span> {Math.round(calories)}</p>\\n        </div>\\n    );\\n}\\n\\nexport default Recipe;\",\"import React, { useEffect, useState} from \\\"react\\\";\\nimport Recipe from './Recipe';\\nimport \\\"./App.css\\\";\\n\\nconst App = () => {\\n  const APP_ID = \\\"bf2fdbf1\\\";\\n  const APP_KEY = \\\"7a0b41e0b8a401a6021b764fc10ff45c\\\";\\n\\n  \\n  const [recipes, setRecipes] = useState([]);\\n  const [search, setSearch] = useState(\\\"\\\");\\n  const [query, setQuery] = useState('chicken');\\n\\n  useEffect(() => {\\n    getRecipes();\\n  }, [query]);\\n\\n  const getRecipes = async () => {\\n    const response = await fetch(\\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\\n    );\\n    const data = await response.json();\\n    setRecipes(data.hits);\\n  };\\n\\n  const updateSearch = e => {\\n    setSearch(e.target.value);\\n    console.log(search);\\n  }\\n\\n  const getSearch = e => {\\n    e.preventDefault();\\n    setQuery(search);\\n    setSearch('');\\n  }\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <form onSubmit={getSearch} className=\\\"search-form\\\">\\n        <input \\n        className=\\\"search-bar\\\" \\n        type=\\\"text\\\" \\n        placeholder=\\\"Chicken\\\"\\n        value={search} \\n        onChange={updateSearch} \\n        />\\n        <button className=\\\"search-button\\\" type=\\\"submit\\\">\\n          Go!\\n        </button>  \\n      </form>\\n      <div className=\\\"recipes\\\">\\n        {recipes.map(recipe =>(\\n          <Recipe\\n          title={recipe.recipe.label} \\n          calories={recipe.recipe.calories}\\n          image={recipe.recipe.image}\\n          ingredients={recipe.recipe.ingredients}\\n          />\\n        ))}\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,t,a){e.exports={recipe:\"recipe_recipe__BdaUe\",image:\"recipe_image__BtdIE\"}},,,,function(e,t,a){e.exports=a(16)},,,,,,function(e,t,a){},,function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),r=a(5),i=a.n(r),o=(a(13),a(2)),s=a.n(o),l=a(6),u=a(1),m=a(3),p=a.n(m),f=function(e){var t=e.image,a=e.title,n=e.calories,r=e.ingredients;return c.a.createElement(\"div\",{className:p.a.recipe},c.a.createElement(\"img\",{className:p.a.image,src:t,alt:\"\"}),c.a.createElement(\"h1\",null,a),c.a.createElement(\"ol\",null,r.map(function(e){return c.a.createElement(\"li\",null,e.text)})),c.a.createElement(\"p\",null,c.a.createElement(\"span\",null,\"Calories:\"),\" \",Math.round(n)))},d=(a(15),function(){var e=Object(n.useState)([]),t=Object(u.a)(e,2),a=t[0],r=t[1],i=Object(n.useState)(\"\"),o=Object(u.a)(i,2),m=o[0],p=o[1],d=Object(n.useState)(\"chicken\"),h=Object(u.a)(d,2),b=h[0],g=h[1];Object(n.useEffect)(function(){v()},[b]);var v=function(){var e=Object(l.a)(s.a.mark(function e(){var t,a;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(\"https://api.edamam.com/search?q=\".concat(b,\"&app_id=\").concat(\"bf2fdbf1\",\"&app_key=\").concat(\"7a0b41e0b8a401a6021b764fc10ff45c\"));case 2:return t=e.sent,e.next=5,t.json();case 5:a=e.sent,r(a.hits);case 7:case\"end\":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}();return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(\"form\",{onSubmit:function(e){e.preventDefault(),g(m),p(\"\")},className:\"search-form\"},c.a.createElement(\"input\",{className:\"search-bar\",type:\"text\",placeholder:\"Chicken\",value:m,onChange:function(e){p(e.target.value),console.log(m)}}),c.a.createElement(\"button\",{className:\"search-button\",type:\"submit\"},\"Go!\")),c.a.createElement(\"div\",{className:\"recipes\"},a.map(function(e){return c.a.createElement(f,{title:e.recipe.label,calories:e.recipe.calories,image:e.recipe.image,ingredients:e.recipe.ingredients})})))});Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(c.a.createElement(d,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[7,1,2]]]);","extractedComments":[]}